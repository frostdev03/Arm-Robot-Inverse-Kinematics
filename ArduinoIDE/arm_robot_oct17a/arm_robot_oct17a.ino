#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/afe5306d-78f2-4455-88a6-0d7ccfc9e1f2 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int centerArm;
  int gripper;
  int lowerArm;
  int neckGripper;
  int upperArm;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <ESP32Servo.h>

// Define servo pins
#define SERVO1_PIN 3   // Servo 1 and 2 (lower arm)
#define SERVO2_PIN 10  // center arm
#define SERVO3_PIN 9   // upper arm
#define SERVO4_PIN 14  // neck gripper
#define SERVO5_PIN 26  // gripper
#define SERVO6_PIN 27  // base

// Create servo objects
Servo servo1, servo2, servo3, servo4, servo5, servo6;

// Initial positions for the servos
int servo1_pos = 0, servo2_pos = 0, servo3_pos = 0, servo4_pos = 0, servo5_pos = 0, servo6_pos = 0;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  
}


/*
  Since Base is READ_WRITE variable, onBaseChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBaseChange()  {
  // Add your code here to act upon Base change
}

/*
  Since RightLowerArm is READ_WRITE variable, onRightLowerArmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRightLowerArmChange()  {
  // Add your code here to act upon RightLowerArm change
}

/*
  Since LeftLowerArm is READ_WRITE variable, onLeftLowerArmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLeftLowerArmChange()  {
  // Add your code here to act upon LeftLowerArm change
}

/*
  Since CenterArm is READ_WRITE variable, onCenterArmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onCenterArmChange()  {
  // Add your code here to act upon CenterArm change
}

/*
  Since UpperArm is READ_WRITE variable, onUpperArmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onUpperArmChange()  {
  // Add your code here to act upon UpperArm change
}


/*
  Since LowerArm is READ_WRITE variable, onLowerArmChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLowerArmChange()  {
  // Add your code here to act upon LowerArm change
}

/*
  Since NeckGripper is READ_WRITE variable, onNeckGripperChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onNeckGripperChange()  {
  // Add your code here to act upon NeckGripper change
}

/*
  Since Gripper is READ_WRITE variable, onGripperChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onGripperChange()  {
  // Add your code here to act upon Gripper change
}
